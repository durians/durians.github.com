---
layout: post
title: "24点游戏的实现"
description: "24点游戏"
categories:
- 榴莲项目

tags:
- 24点


---


**[24点][0]:**给4个正整数，进行运算（加+ 减- 乘* 除/），每个数只能用一次，可用括号控制运算优先级，给出运算结果为24的表达式。

    input               output
    -------------------------------
	2 3 12 12        ((3-2)*12)+12
	5 5 5 5           (5*5)-(5/5)
	1 3 5 6           (1+(3*6))+5	
    8 13 9 4         8+((13-9)*4)
	2 13 7 7          2*(13-(7/7))


####[暴力解决][1]
>*4个数，3个运算符，再加括号，遍历所有能组成的表达式：*
> 
> 
> 
>>1.四个数有4\*3\*2=24个组合
>>
>>2.三个运算符有4\*4\*4=64个组合
>>
>>3.括号，2对括号5种安排方法
>

```c

//4个数有24个组合
int b[24][4] = {
    
    {0,1,2,3},{0,1,3,2},{0,3,1,2},
    {0,2,3,1},{0,2,1,3},{0,3,2,1},
    
    {1,2,3,0},{1,2,0,3},{1,3,2,0},
    {1,3,0,2},{1,0,2,3},{1,0,3,2},
    
    {2,1,3,0},{2,1,0,3},{2,3,1,0},
    {2,3,0,1},{2,0,1,3},{2,0,3,1},
    
    {3,2,1,0},{3,2,0,1},{3,1,2,0},
    {3,1,0,2},{3,0,2,1},{3,0,1,2}
};

//3个运算符有64个组合
char op[64][4] ={
"+++", "++-", "++*", "++/",   
"+-+", "+--", "+-*", "+-/",   
"+*+", "+*-", "+**", "+*/",   
"+/+", "+/-", "+/*", "+//",  
"-++", "-+-", "-+*", "-+/",   
"--+", "---", "--*", "--/",
"-*+", "-*-", "-**", "-*/",
"-/+", "-/-", "-/*", "-//",    
"*++", "*+-", "*+*", "*+/",    
"*-+", "*--", "*-*", "*-/",   
"**+", "**-", "***", "**/",    
"*/+", "*/-", "*/*", "*//",    
"/++", "/+-", "/+*", "/+/",   
"/-+", "/--", "/-*", "/-/",    
"/*+", "/*-", "/**", "/*/",   
"//+", "//-", "//*", "///",    
};

/*
    两对括号五种不同运算方式：
  　((a1 op1 a2) op2 a3) op3 a4
 　　(a1 op1 (a2 op2 a3)) op3 a4
 　　(a1 op1 a2) op2 (a3 op3 a4)
 　　a1 op1 ((a2 op2 a3) op3 a4)
 　　a1 op1 (a2 op2 (a3 op3 a4))
*/

```

[0]:http://www.patest.cn/contests/ds/2-08
[1]:https://github.com/durians/durians/blob/master/24dian/24dian.c